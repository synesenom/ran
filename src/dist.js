/**
 * A collection of random number generators for well-known distributions.
 *
 * @namespace dist
 * @memberOf ran
 */
export { default as InvalidDiscrete } from './dist/_invalid'
export { default as Alpha } from './dist/alpha'
export { default as Anglit } from './dist/anglit'
export { default as Arcsine } from './dist/arcsine'
export { default as Bates } from './dist/bates'
export { default as Benini } from './dist/benini'
export { default as BenktanderII } from './dist/benktander-ii'
export { default as Bernoulli } from './dist/bernoulli'
export { default as Beta } from './dist/beta'
export { default as BetaPrime } from './dist/beta-prime'
export { default as BetaRectangular } from './dist/beta-rectangular'
export { default as Binomial } from './dist/binomial'
export { default as BirnbaumSaunders } from './dist/birnbaum-saunders'
export { default as BoundedPareto } from './dist/bounded-pareto'
export { default as Bradford } from './dist/bradford'
export { default as Burr } from './dist/burr'
export { default as Categorical } from './dist/categorical'
export { default as Cauchy } from './dist/cauchy'
export { default as Chi } from './dist/chi'
export { default as Chi2 } from './dist/chi2'
export { default as Dagum } from './dist/dagum'
export { default as Degenerate } from './dist/degenerate'
export { default as Delaporte } from './dist/delaporte'
export { default as DiscreteUniform } from './dist/discrete-uniform'
export { default as DiscreteWeibull } from './dist/discrete-weibull'
export { default as DoubleGamma } from './dist/double-gamma'
export { default as DoubleWeibull } from './dist/double-weibull'
export { default as Erlang } from './dist/erlang'
export { default as Exponential } from './dist/exponential'
export { default as ExponentialLogarithmic } from './dist/exponential-logarithmic'
export { default as F } from './dist/f'
export { default as FlorySchulz } from './dist/flory-schulz'
export { default as Frechet } from './dist/frechet'
export { default as FisherZ } from './dist/fisher-z'
export { default as Gamma } from './dist/gamma'
export { default as GammaGompertz } from './dist/gamma-gompertz'
export { default as GeneralizedGamma } from './dist/generalized-gamma'
export { default as GeneralizedPareto } from './dist/generalized-pareto'
export { default as Geometric } from './dist/geometric'
export { default as Gompertz } from './dist/gompertz'
export { default as Gumbel } from './dist/gumbel'
export { default as HalfNormal } from './dist/half-normal'
export { default as HalfLogistic } from './dist/half-logistic'
export { default as Hoyt } from './dist/hoyt'
export { default as HyperbolicSecant } from './dist/hyperbolic-secant'
export { default as Hypergeometric } from './dist/hypergeometric'
export { default as InverseChi2 } from './dist/inverse-chi2'
export { default as InverseGamma } from './dist/inverse-gamma'
export { default as InverseGaussian } from './dist/inverse-gaussian'
export { default as IrwinHall } from './dist/irwin-hall'
export { default as JohnsonSB } from './dist/johnson-sb'
export { default as JohnsonSU } from './dist/johnson-su'
export { default as Kumaraswamy } from './dist/kumaraswamy'
export { default as Laplace } from './dist/laplace'
export { default as Levy } from './dist/levy'
export { default as Lindley } from './dist/lindley'
export { default as Logarithmic } from './dist/logarithmic'
export { default as LogCauchy } from './dist/log-cauchy'
export { default as LogGamma } from './dist/log-gamma'
export { default as Logistic } from './dist/logistic'
export { default as LogisticExponential } from './dist/logistic-exponential'
export { default as LogitNormal } from './dist/logit-normal'
export { default as LogLaplace } from './dist/log-laplace'
export { default as LogLogistic } from './dist/log-logistic'
export { default as LogNormal } from './dist/log-normal'
export { default as LogSeries } from './dist/log-series'
export { default as Lomax } from './dist/lomax'
export { default as Makeham } from './dist/makeham'
export { default as MaxwellBoltzmann } from './dist/maxwell-boltzmann'
export { default as Mielke } from './dist/mielke'
export { default as Moyal } from './dist/moyal'
export { default as Nakagami } from './dist/nakagami'
export { default as NegativeBinomial } from './dist/negative-binomial'
export { default as NegativeHypergeometric } from './dist/negative-hypergeometric'
export { default as NoncentralBeta } from './dist/noncentral-beta'
export { default as NoncentralChi } from './dist/noncentral-chi'
export { default as NoncentralChi2 } from './dist/noncentral-chi2'
export { default as NoncentralF } from './dist/noncentral-f'
export { default as Normal } from './dist/normal'
export { default as Pareto } from './dist/pareto'
export { default as PERT } from './dist/pert'
export { default as Poisson } from './dist/poisson'
export { default as PowerLaw } from './dist/power-law'
export { default as QExponential } from './dist/q-exponential'
export { default as Rademacher } from './dist/rademacher'
export { default as RaisedCosine } from './dist/raised-cosine'
export { default as Rayleigh } from './dist/rayleigh'
export { default as Reciprocal } from './dist/reciprocal'
export { default as ReciprocalInverseGaussian } from './dist/reciprocal-inverse-gaussian'
export { default as Rice } from './dist/rice'
export { default as ShiftedLogLogistic } from './dist/shifted-log-logistic'
export { default as Skellam } from './dist/skellam'
export { default as SkewNormal } from './dist/skew-normal'
export { default as Slash } from './dist/slash'
export { default as Soliton } from './dist/soliton'
export { default as StudentT } from './dist/student-t'
export { default as Triangular } from './dist/triangular'
export { default as TukeyLambda } from './dist/tukey-lambda'
export { default as Uniform } from './dist/uniform'
export { default as UQuadratic } from './dist/u-quadratic'
export { default as Weibull } from './dist/weibull'
export { default as Wigner } from './dist/wigner'
export { default as YuleSimon } from './dist/yule-simon'
export { default as Zeta } from './dist/zeta'
export { default as Zipf } from './dist/zipf'
