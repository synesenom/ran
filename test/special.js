import { assert } from 'chai'
import { describe, it } from 'mocha'
import { erf, erfc, erfinv } from '../src/special/error'
import gamma from '../src/special/gamma'
import logGamma from '../src/special/log-gamma'
import { gammaLowerIncomplete, gammaUpperIncomplete } from '../src/special/gamma-incomplete'
import hurwitzZeta from '../src/special/hurwitz-zeta'
import lambertW from '../src/special/lambert-w'
import marcumQ from '../src/special/marcum-q'
import owenT from '../src/special/owen-t'
import riemannZeta from '../src/special/riemann-zeta'
import utils from './test-utils'

const LAPS = 100
const PRECISION = 1e-10

describe('special', () => {
  /*describe('.erf()', () => {
    it('should return reference values', () => {
      [
        [-10.0000000000000000, -1.0000000000000000],
        [-9.8994974874371859, -1.0000000000000000],
        [-9.7989949748743719, -1.0000000000000000],
        [-9.6984924623115578, -1.0000000000000000],
        [-9.5979899497487438, -1.0000000000000000],
        [-9.4974874371859297, -1.0000000000000000],
        [-9.3969849246231156, -1.0000000000000000],
        [-9.2964824120603016, -1.0000000000000000],
        [-9.1959798994974875, -1.0000000000000000],
        [-9.0954773869346734, -1.0000000000000000],
        [-8.9949748743718594, -1.0000000000000000],
        [-8.8944723618090453, -1.0000000000000000],
        [-8.7939698492462313, -1.0000000000000000],
        [-8.6934673366834172, -1.0000000000000000],
        [-8.5929648241206031, -1.0000000000000000],
        [-8.4924623115577891, -1.0000000000000000],
        [-8.3919597989949750, -1.0000000000000000],
        [-8.2914572864321610, -1.0000000000000000],
        [-8.1909547738693469, -1.0000000000000000],
        [-8.0904522613065328, -1.0000000000000000],
        [-7.9899497487437188, -1.0000000000000000],
        [-7.8894472361809047, -1.0000000000000000],
        [-7.7889447236180906, -1.0000000000000000],
        [-7.6884422110552766, -1.0000000000000000],
        [-7.5879396984924625, -1.0000000000000000],
        [-7.4874371859296485, -1.0000000000000000],
        [-7.3869346733668344, -1.0000000000000000],
        [-7.2864321608040203, -1.0000000000000000],
        [-7.1859296482412063, -1.0000000000000000],
        [-7.0854271356783922, -1.0000000000000000],
        [-6.9849246231155782, -1.0000000000000000],
        [-6.8844221105527641, -1.0000000000000000],
        [-6.7839195979899500, -1.0000000000000000],
        [-6.6834170854271360, -1.0000000000000000],
        [-6.5829145728643219, -1.0000000000000000],
        [-6.4824120603015079, -1.0000000000000000],
        [-6.3819095477386938, -1.0000000000000000],
        [-6.2814070351758797, -1.0000000000000000],
        [-6.1809045226130657, -1.0000000000000000],
        [-6.0804020100502516, -1.0000000000000000],
        [-5.9798994974874367, -1.0000000000000000],
        [-5.8793969849246226, -0.9999999999999999],
        [-5.7788944723618085, -0.9999999999999998],
        [-5.6783919597989945, -0.9999999999999991],
        [-5.5778894472361804, -0.9999999999999969],
        [-5.4773869346733663, -0.9999999999999905],
        [-5.3768844221105523, -0.9999999999999714],
        [-5.2763819095477382, -0.9999999999999147],
        [-5.1758793969849242, -0.9999999999997516],
        [-5.0753768844221101, -0.9999999999992909],
        [-4.9748743718592960, -0.9999999999980150],
        [-4.8743718592964820, -0.9999999999945527],
        [-4.7738693467336679, -0.9999999999853444],
        [-4.6733668341708539, -0.9999999999613438],
        [-4.5728643216080398, -0.9999999999000369],
        [-4.4723618090452257, -0.9999999997465618],
        [-4.3718592964824117, -0.9999999993700266],
        [-4.2713567839195976, -0.9999999984646799],
        [-4.1708542713567835, -0.9999999963313164],
        [-4.0703517587939695, -0.9999999914046215],
        [-3.9698492462311554, -0.9999999802543014],
        [-3.8693467336683414, -0.9999999555222647],
        [-3.7688442211055273, -0.9999999017605214],
        [-3.6683417085427132, -0.9999997872282871],
        [-3.5678391959798992, -0.9999995481043371],
        [-3.4673366834170851, -0.9999990588221641],
        [-3.3668341708542711, -0.9999980776692388],
        [-3.2663316582914570, -0.9999961494561451],
        [-3.1658291457286429, -0.9999924356914300],
        [-3.0653266331658289, -0.9999854257434362],
        [-2.9648241206030148, -0.9999724582428278],
        [-2.8643216080402008, -0.9999489489889158],
        [-2.7638190954773867, -0.9999071791767856],
        [-2.6633165829145726, -0.9998344468770684],
        [-2.5628140703517586, -0.9997103293094043],
        [-2.4623115577889445, -0.9995027517761521],
        [-2.3618090452261304, -0.9991625249087086],
        [-2.2613065326633164, -0.9986160149880419],
        [-2.1608040201005023, -0.9977556778091514],
        [-2.0603015075376883, -0.9964283428193026],
        [-1.9597989949748733, -0.9944214063793710],
        [-1.8592964824120592, -0.9914474956357575],
        [-1.7587939698492452, -0.9871286916993316],
        [-1.6582914572864311, -0.9809820159232593],
        [-1.5577889447236171, -0.9724085111987608],
        [-1.4572864321608030, -0.9606887771630396],
        [-1.3567839195979889, -0.9449880991060212],
        [-1.2562814070351749, -0.9243741899671939],
        [-1.1557788944723608, -0.8978499095256450],
        [-1.0552763819095468, -0.8644020618450325],
        [-0.9547738693467327, -0.8230655275986299],
        [-0.8542713567839186, -0.7729997147529190],
        [-0.7537688442211046, -0.7135718929279393],
        [-0.6532663316582905, -0.6444398024411155],
        [-0.5527638190954764, -0.5656244344826689],
        [-0.4522613065326624, -0.4775634635220064],
        [-0.3517587939698483, -0.3811367467536038],
        [-0.2512562814070343, -0.2776576473575211],
        [-0.1507537688442202, -0.1688274909136118],
        [-0.0502512562814061, -0.0566547786961705],
        [0.0502512562814079, 0.0566547786961725],
        [0.1507537688442220, 0.1688274909136138],
        [0.2512562814070360, 0.2776576473575230],
        [0.3517587939698501, 0.3811367467536056],
        [0.4522613065326642, 0.4775634635220081],
        [0.5527638190954782, 0.5656244344826704],
        [0.6532663316582923, 0.6444398024411169],
        [0.7537688442211063, 0.7135718929279407],
        [0.8542713567839204, 0.7729997147529198],
        [0.9547738693467345, 0.8230655275986307],
        [1.0552763819095485, 0.8644020618450332],
        [1.1557788944723626, 0.8978499095256456],
        [1.2562814070351767, 0.9243741899671943],
        [1.3567839195979907, 0.9449880991060216],
        [1.4572864321608048, 0.9606887771630398],
        [1.5577889447236188, 0.9724085111987610],
        [1.6582914572864329, 0.9809820159232594],
        [1.7587939698492470, 0.9871286916993317],
        [1.8592964824120610, 0.9914474956357575],
        [1.9597989949748751, 0.9944214063793710],
        [2.0603015075376891, 0.9964283428193026],
        [2.1608040201005032, 0.9977556778091514],
        [2.2613065326633173, 0.9986160149880419],
        [2.3618090452261313, 0.9991625249087086],
        [2.4623115577889454, 0.9995027517761521],
        [2.5628140703517595, 0.9997103293094043],
        [2.6633165829145735, 0.9998344468770684],
        [2.7638190954773876, 0.9999071791767856],
        [2.8643216080402016, 0.9999489489889158],
        [2.9648241206030157, 0.9999724582428278],
        [3.0653266331658298, 0.9999854257434362],
        [3.1658291457286438, 0.9999924356914300],
        [3.2663316582914579, 0.9999961494561451],
        [3.3668341708542719, 0.9999980776692388],
        [3.4673366834170860, 0.9999990588221641],
        [3.5678391959799001, 0.9999995481043371],
        [3.6683417085427141, 0.9999997872282871],
        [3.7688442211055282, 0.9999999017605214],
        [3.8693467336683423, 0.9999999555222647],
        [3.9698492462311563, 0.9999999802543014],
        [4.0703517587939704, 0.9999999914046215],
        [4.1708542713567844, 0.9999999963313164],
        [4.2713567839195985, 0.9999999984646799],
        [4.3718592964824126, 0.9999999993700266],
        [4.4723618090452266, 0.9999999997465618],
        [4.5728643216080407, 0.9999999999000369],
        [4.6733668341708547, 0.9999999999613438],
        [4.7738693467336688, 0.9999999999853444],
        [4.8743718592964829, 0.9999999999945527],
        [4.9748743718592969, 0.9999999999980150],
        [5.0753768844221110, 0.9999999999992909],
        [5.1758793969849251, 0.9999999999997516],
        [5.2763819095477391, 0.9999999999999147],
        [5.3768844221105532, 0.9999999999999714],
        [5.4773869346733672, 0.9999999999999905],
        [5.5778894472361813, 0.9999999999999969],
        [5.6783919597989954, 0.9999999999999991],
        [5.7788944723618094, 0.9999999999999998],
        [5.8793969849246235, 0.9999999999999999],
        [5.9798994974874375, 1.0000000000000000],
        [6.0804020100502534, 1.0000000000000000],
        [6.1809045226130657, 1.0000000000000000],
        [6.2814070351758815, 1.0000000000000000],
        [6.3819095477386938, 1.0000000000000000],
        [6.4824120603015096, 1.0000000000000000],
        [6.5829145728643219, 1.0000000000000000],
        [6.6834170854271377, 1.0000000000000000],
        [6.7839195979899500, 1.0000000000000000],
        [6.8844221105527659, 1.0000000000000000],
        [6.9849246231155782, 1.0000000000000000],
        [7.0854271356783940, 1.0000000000000000],
        [7.1859296482412063, 1.0000000000000000],
        [7.2864321608040221, 1.0000000000000000],
        [7.3869346733668344, 1.0000000000000000],
        [7.4874371859296502, 1.0000000000000000],
        [7.5879396984924625, 1.0000000000000000],
        [7.6884422110552784, 1.0000000000000000],
        [7.7889447236180906, 1.0000000000000000],
        [7.8894472361809065, 1.0000000000000000],
        [7.9899497487437188, 1.0000000000000000],
        [8.0904522613065346, 1.0000000000000000],
        [8.1909547738693469, 1.0000000000000000],
        [8.2914572864321627, 1.0000000000000000],
        [8.3919597989949750, 1.0000000000000000],
        [8.4924623115577909, 1.0000000000000000],
        [8.5929648241206031, 1.0000000000000000],
        [8.6934673366834190, 1.0000000000000000],
        [8.7939698492462313, 1.0000000000000000],
        [8.8944723618090471, 1.0000000000000000],
        [8.9949748743718594, 1.0000000000000000],
        [9.0954773869346752, 1.0000000000000000],
        [9.1959798994974875, 1.0000000000000000],
        [9.2964824120603033, 1.0000000000000000],
        [9.3969849246231156, 1.0000000000000000],
        [9.4974874371859315, 1.0000000000000000],
        [9.5979899497487438, 1.0000000000000000],
        [9.6984924623115596, 1.0000000000000000],
        [9.7989949748743719, 1.0000000000000000],
        [9.8994974874371877, 1.0000000000000000],
        [10.0000000000000000, 1.0000000000000000]
      ].forEach(d => {
        assert(Math.abs((erf(d[0]) - d[1]) / d[1]) < PRECISION)
      })
    })
  })

  describe('.erfc()', () => {
    it('should return reference values', () => {
      [
        [-10.0000000000000000, 2.0000000000000000],
        [-9.8994974874371859, 2.0000000000000000],
        [-9.7989949748743719, 2.0000000000000000],
        [-9.6984924623115578, 2.0000000000000000],
        [-9.5979899497487438, 2.0000000000000000],
        [-9.4974874371859297, 2.0000000000000000],
        [-9.3969849246231156, 2.0000000000000000],
        [-9.2964824120603016, 2.0000000000000000],
        [-9.1959798994974875, 2.0000000000000000],
        [-9.0954773869346734, 2.0000000000000000],
        [-8.9949748743718594, 2.0000000000000000],
        [-8.8944723618090453, 2.0000000000000000],
        [-8.7939698492462313, 2.0000000000000000],
        [-8.6934673366834172, 2.0000000000000000],
        [-8.5929648241206031, 2.0000000000000000],
        [-8.4924623115577891, 2.0000000000000000],
        [-8.3919597989949750, 2.0000000000000000],
        [-8.2914572864321610, 2.0000000000000000],
        [-8.1909547738693469, 2.0000000000000000],
        [-8.0904522613065328, 2.0000000000000000],
        [-7.9899497487437188, 2.0000000000000000],
        [-7.8894472361809047, 2.0000000000000000],
        [-7.7889447236180906, 2.0000000000000000],
        [-7.6884422110552766, 2.0000000000000000],
        [-7.5879396984924625, 2.0000000000000000],
        [-7.4874371859296485, 2.0000000000000000],
        [-7.3869346733668344, 2.0000000000000000],
        [-7.2864321608040203, 2.0000000000000000],
        [-7.1859296482412063, 2.0000000000000000],
        [-7.0854271356783922, 2.0000000000000000],
        [-6.9849246231155782, 2.0000000000000000],
        [-6.8844221105527641, 2.0000000000000000],
        [-6.7839195979899500, 2.0000000000000000],
        [-6.6834170854271360, 2.0000000000000000],
        [-6.5829145728643219, 2.0000000000000000],
        [-6.4824120603015079, 2.0000000000000000],
        [-6.3819095477386938, 2.0000000000000000],
        [-6.2814070351758797, 2.0000000000000000],
        [-6.1809045226130657, 2.0000000000000000],
        [-6.0804020100502516, 2.0000000000000000],
        [-5.9798994974874367, 2.0000000000000000],
        [-5.8793969849246226, 2.0000000000000000],
        [-5.7788944723618085, 1.9999999999999998],
        [-5.6783919597989945, 1.9999999999999991],
        [-5.5778894472361804, 1.9999999999999969],
        [-5.4773869346733663, 1.9999999999999905],
        [-5.3768844221105523, 1.9999999999999714],
        [-5.2763819095477382, 1.9999999999999147],
        [-5.1758793969849242, 1.9999999999997518],
        [-5.0753768844221101, 1.9999999999992908],
        [-4.9748743718592960, 1.9999999999980149],
        [-4.8743718592964820, 1.9999999999945526],
        [-4.7738693467336679, 1.9999999999853444],
        [-4.6733668341708539, 1.9999999999613438],
        [-4.5728643216080398, 1.9999999999000369],
        [-4.4723618090452257, 1.9999999997465618],
        [-4.3718592964824117, 1.9999999993700266],
        [-4.2713567839195976, 1.9999999984646799],
        [-4.1708542713567835, 1.9999999963313164],
        [-4.0703517587939695, 1.9999999914046214],
        [-3.9698492462311554, 1.9999999802543014],
        [-3.8693467336683414, 1.9999999555222647],
        [-3.7688442211055273, 1.9999999017605214],
        [-3.6683417085427132, 1.9999997872282871],
        [-3.5678391959798992, 1.9999995481043371],
        [-3.4673366834170851, 1.9999990588221641],
        [-3.3668341708542711, 1.9999980776692388],
        [-3.2663316582914570, 1.9999961494561451],
        [-3.1658291457286429, 1.9999924356914300],
        [-3.0653266331658289, 1.9999854257434362],
        [-2.9648241206030148, 1.9999724582428278],
        [-2.8643216080402008, 1.9999489489889160],
        [-2.7638190954773867, 1.9999071791767857],
        [-2.6633165829145726, 1.9998344468770684],
        [-2.5628140703517586, 1.9997103293094043],
        [-2.4623115577889445, 1.9995027517761521],
        [-2.3618090452261304, 1.9991625249087086],
        [-2.2613065326633164, 1.9986160149880419],
        [-2.1608040201005023, 1.9977556778091514],
        [-2.0603015075376883, 1.9964283428193026],
        [-1.9597989949748733, 1.9944214063793710],
        [-1.8592964824120592, 1.9914474956357575],
        [-1.7587939698492452, 1.9871286916993316],
        [-1.6582914572864311, 1.9809820159232594],
        [-1.5577889447236171, 1.9724085111987608],
        [-1.4572864321608030, 1.9606887771630395],
        [-1.3567839195979889, 1.9449880991060211],
        [-1.2562814070351749, 1.9243741899671940],
        [-1.1557788944723608, 1.8978499095256451],
        [-1.0552763819095468, 1.8644020618450325],
        [-0.9547738693467327, 1.8230655275986301],
        [-0.8542713567839186, 1.7729997147529191],
        [-0.7537688442211046, 1.7135718929279393],
        [-0.6532663316582905, 1.6444398024411155],
        [-0.5527638190954764, 1.5656244344826689],
        [-0.4522613065326624, 1.4775634635220065],
        [-0.3517587939698483, 1.3811367467536038],
        [-0.2512562814070343, 1.2776576473575210],
        [-0.1507537688442202, 1.1688274909136118],
        [-0.0502512562814061, 1.0566547786961706],
        [0.0502512562814079, 0.9433452213038275],
        [0.1507537688442220, 0.8311725090863862],
        [0.2512562814070360, 0.7223423526424770],
        [0.3517587939698501, 0.6188632532463945],
        [0.4522613065326642, 0.5224365364779919],
        [0.5527638190954782, 0.4343755655173296],
        [0.6532663316582923, 0.3555601975588831],
        [0.7537688442211063, 0.2864281070720594],
        [0.8542713567839204, 0.2270002852470801],
        [0.9547738693467345, 0.1769344724013692],
        [1.0552763819095485, 0.1355979381549668],
        [1.1557788944723626, 0.1021500904743545],
        [1.2562814070351767, 0.0756258100328057],
        [1.3567839195979907, 0.0550119008939785],
        [1.4572864321608048, 0.0393112228369602],
        [1.5577889447236188, 0.0275914888012390],
        [1.6582914572864329, 0.0190179840767406],
        [1.7587939698492470, 0.0128713083006683],
        [1.8592964824120610, 0.0085525043642425],
        [1.9597989949748751, 0.0055785936206289],
        [2.0603015075376891, 0.0035716571806974],
        [2.1608040201005032, 0.0022443221908486],
        [2.2613065326633173, 0.0013839850119581],
        [2.3618090452261313, 0.0008374750912914],
        [2.4623115577889454, 0.0004972482238479],
        [2.5628140703517595, 0.0002896706905958],
        [2.6633165829145735, 0.0001655531229316],
        [2.7638190954773876, 0.0000928208232144],
        [2.8643216080402016, 0.0000510510110841],
        [2.9648241206030157, 0.0000275417571723],
        [3.0653266331658298, 0.0000145742565639],
        [3.1658291457286438, 0.0000075643085700],
        [3.2663316582914579, 0.0000038505438548],
        [3.3668341708542719, 0.0000019223307612],
        [3.4673366834170860, 0.0000009411778358],
        [3.5678391959799001, 0.0000004518956628],
        [3.6683417085427141, 0.0000002127717129],
        [3.7688442211055282, 0.0000000982394786],
        [3.8693467336683423, 0.0000000444777353],
        [3.9698492462311563, 0.0000000197456986],
        [4.0703517587939704, 0.0000000085953785],
        [4.1708542713567844, 0.0000000036686836],
        [4.2713567839195985, 0.0000000015353201],
        [4.3718592964824126, 0.0000000006299735],
        [4.4723618090452266, 0.0000000002534381],
        [4.5728643216080407, 0.0000000000999632],
        [4.6733668341708547, 0.0000000000386562],
        [4.7738693467336688, 0.0000000000146556],
        [4.8743718592964829, 0.0000000000054473],
        [4.9748743718592969, 0.0000000000019850],
        [5.0753768844221110, 0.0000000000007091],
        [5.1758793969849251, 0.0000000000002483],
        [5.2763819095477391, 0.0000000000000853],
        [5.3768844221105532, 0.0000000000000287],
        [5.4773869346733672, 0.0000000000000095],
        [5.5778894472361813, 0.0000000000000031],
        [5.6783919597989954, 0.0000000000000010],
        [5.7788944723618094, 0.0000000000000003],
        [5.8793969849246235, 0.0000000000000001],
        [5.9798994974874375, 0.0000000000000000],
        [6.0804020100502534, 0.0000000000000000],
        [6.1809045226130657, 0.0000000000000000],
        [6.2814070351758815, 0.0000000000000000],
        [6.3819095477386938, 0.0000000000000000],
        [6.4824120603015096, 0.0000000000000000],
        [6.5829145728643219, 0.0000000000000000],
        [6.6834170854271377, 0.0000000000000000],
        [6.7839195979899500, 0.0000000000000000],
        [6.8844221105527659, 0.0000000000000000],
        [6.9849246231155782, 0.0000000000000000],
        [7.0854271356783940, 0.0000000000000000],
        [7.1859296482412063, 0.0000000000000000],
        [7.2864321608040221, 0.0000000000000000],
        [7.3869346733668344, 0.0000000000000000],
        [7.4874371859296502, 0.0000000000000000],
        [7.5879396984924625, 0.0000000000000000],
        [7.6884422110552784, 0.0000000000000000],
        [7.7889447236180906, 0.0000000000000000],
        [7.8894472361809065, 0.0000000000000000],
        [7.9899497487437188, 0.0000000000000000],
        [8.0904522613065346, 0.0000000000000000],
        [8.1909547738693469, 0.0000000000000000],
        [8.2914572864321627, 0.0000000000000000],
        [8.3919597989949750, 0.0000000000000000],
        [8.4924623115577909, 0.0000000000000000],
        [8.5929648241206031, 0.0000000000000000],
        [8.6934673366834190, 0.0000000000000000],
        [8.7939698492462313, 0.0000000000000000],
        [8.8944723618090471, 0.0000000000000000],
        [8.9949748743718594, 0.0000000000000000],
        [9.0954773869346752, 0.0000000000000000],
        [9.1959798994974875, 0.0000000000000000],
        [9.2964824120603033, 0.0000000000000000],
        [9.3969849246231156, 0.0000000000000000],
        [9.4974874371859315, 0.0000000000000000],
        [9.5979899497487438, 0.0000000000000000],
        [9.6984924623115596, 0.0000000000000000],
        [9.7989949748743719, 0.0000000000000000],
        [9.8994974874371877, 0.0000000000000000],
        [10.0000000000000000, 0.0000000000000000]
      ].forEach(d => {
        //assert(Math.abs((erfc(d[0]) - d[1]) / d[1]) < PRECISION)
        // console.log(erfc(d[0]), d[1])
      })
    })
  })

  describe('.erfinv()', () => {
    it('should return reference values', () => {
      [
        [-0.9899497487437185, -1.8201604213643334],
        [-0.9798994974874372, -1.6436460578945906],
        [-0.9698492462311558, -1.5330812342079652],
        [-0.9597989949748744, -1.4507551442078186],
        [-0.9497487437185930, -1.3843870842981043],
        [-0.9396984924623115, -1.3283585022347517],
        [-0.9296482412060302, -1.2796081406581810],
        [-0.9195979899497487, -1.2362759846251961],
        [-0.9095477386934674, -1.1971436902084893],
        [-0.8994974874371859, -1.1613679596394628],
        [-0.8894472361809045, -1.1283398662673620],
        [-0.8793969849246231, -1.0976047316671320],
        [-0.8693467336683417, -1.0688136818078475],
        [-0.8592964824120604, -1.0416929156131458],
        [-0.8492462311557789, -1.0160234238185164],
        [-0.8391959798994975, -0.9916271537626481],
        [-0.8291457286432161, -0.9683573017251451],
        [-0.8190954773869347, -0.9460913340775432],
        [-0.8090452261306533, -0.9247258630322434],
        [-0.7989949748743719, -0.9041728136139368],
        [-0.7889447236180904, -0.8843565089284371],
        [-0.7788944723618090, -0.8652114209552718],
        [-0.7688442211055276, -0.8466804118801807],
        [-0.7587939698492463, -0.8287133425240066],
        [-0.7487437185929648, -0.8112659592884406],
        [-0.7386934673366834, -0.7942989950681580],
        [-0.7286432160804019, -0.7777774364241168],
        [-0.7185929648241206, -0.7616699213062538],
        [-0.7085427135678393, -0.7459482402749372],
        [-0.6984924623115578, -0.7305869205072695],
        [-0.6884422110552764, -0.7155628765665775],
        [-0.6783919597989949, -0.7008551154268512],
        [-0.6683417085427136, -0.6864444859019415],
        [-0.6582914572864322, -0.6723134646596918],
        [-0.6482412060301508, -0.6584459725660506],
        [-0.6381909547738693, -0.6448272163204705],
        [-0.6281407035175879, -0.6314435512966627],
        [-0.6180904522613065, -0.6182823622546830],
        [-0.6080402010050251, -0.6053319591878222],
        [-0.5979899497487438, -0.5925814860457237],
        [-0.5879396984924623, -0.5800208404598278],
        [-0.5778894472361809, -0.5676406029086670],
        [-0.5678391959798995, -0.5554319740140609],
        [-0.5577889447236181, -0.5433867188667487],
        [-0.5477386934673367, -0.5314971174506351],
        [-0.5376884422110553, -0.5197559203758475],
        [-0.5276381909547738, -0.5081563092478776],
        [-0.5175879396984925, -0.4966918610976727],
        [-0.5075376884422110, -0.4853565163792546],
        [-0.4974874371859297, -0.4741445501101276],
        [-0.4874371859296482, -0.4630505457876562],
        [-0.4773869346733668, -0.4520693717636631],
        [-0.4673366834170855, -0.4411961598011674],
        [-0.4572864321608040, -0.4304262855727095],
        [-0.4472361809045226, -0.4197553508900891],
        [-0.4371859296482412, -0.4091791674814065],
        [-0.4271356783919598, -0.3986937421537033],
        [-0.4170854271356784, -0.3882952631988532],
        [-0.4070351758793970, -0.3779800879170655],
        [-0.3969849246231155, -0.3677447311468907],
        [-0.3869346733668342, -0.3575858547032160],
        [-0.3768844221105527, -0.3475002576357475],
        [-0.3668341708542714, -0.3374848672300732],
        [-0.3567839195979899, -0.3275367306818138],
        [-0.3467336683417085, -0.3176530073817498],
        [-0.3366834170854272, -0.3078309617562982],
        [-0.3266331658291457, -0.2980679566134342],
        [-0.3165829145728644, -0.2883614469491969],
        [-0.3065326633165829, -0.2787089741743818],
        [-0.2964824120603015, -0.2691081607249791],
        [-0.2864321608040201, -0.2595567050234224],
        [-0.2763819095477387, -0.2500523767608359],
        [-0.2663316582914573, -0.2405930124732439],
        [-0.2562814070351759, -0.2311765113871782],
        [-0.2462311557788944, -0.2218008315123383],
        [-0.2361809045226131, -0.2124639859609261],
        [-0.2261306532663316, -0.2031640394750513],
        [-0.2160804020100502, -0.1938991051451869],
        [-0.2060301507537688, -0.1846673413040749],
        [-0.1959798994974874, -0.1754669485817571],
        [-0.1859296482412061, -0.1662961671085567],
        [-0.1758793969849246, -0.1571532738538590],
        [-0.1658291457286432, -0.1480365800894733],
        [-0.1557788944723618, -0.1389444289671851],
        [-0.1457286432160804, -0.1298751932008606],
        [-0.1356783919597990, -0.1208272728441390],
        [-0.1256281407035176, -0.1117990931553482],
        [-0.1155778894472361, -0.1027891025418308],
        [-0.1055276381909548, -0.0937957705763474],
        [-0.0954773869346733, -0.0848175860786609],
        [-0.0854271356783920, -0.0758530552557985],
        [-0.0753768844221105, -0.0669006998948242],
        [-0.0653266331658291, -0.0579590556022707],
        [-0.0552763819095478, -0.0490266700846369],
        [-0.0452261306532663, -0.0401021014646000],
        [-0.0351758793969850, -0.0311839166277868],
        [-0.0251256281407035, -0.0222706895951229],
        [-0.0150753768844221, -0.0133609999159191],
        [-0.0050251256281407, -0.0044534310769705],
        [0.0050251256281406, 0.0044534310769704],
        [0.0150753768844221, 0.0133609999159191],
        [0.0251256281407035, 0.0222706895951229],
        [0.0351758793969850, 0.0311839166277868],
        [0.0452261306532664, 0.0401021014646001],
        [0.0552763819095476, 0.0490266700846368],
        [0.0653266331658291, 0.0579590556022707],
        [0.0753768844221105, 0.0669006998948242],
        [0.0854271356783920, 0.0758530552557985],
        [0.0954773869346734, 0.0848175860786610],
        [0.1055276381909549, 0.0937957705763475],
        [0.1155778894472361, 0.1027891025418308],
        [0.1256281407035176, 0.1117990931553482],
        [0.1356783919597990, 0.1208272728441390],
        [0.1457286432160805, 0.1298751932008607],
        [0.1557788944723619, 0.1389444289671851],
        [0.1658291457286432, 0.1480365800894733],
        [0.1758793969849246, 0.1571532738538590],
        [0.1859296482412061, 0.1662961671085567],
        [0.1959798994974875, 0.1754669485817572],
        [0.2060301507537690, 0.1846673413040750],
        [0.2160804020100502, 0.1938991051451869],
        [0.2261306532663316, 0.2031640394750513],
        [0.2361809045226131, 0.2124639859609261],
        [0.2462311557788945, 0.2218008315123384],
        [0.2562814070351760, 0.2311765113871783],
        [0.2663316582914572, 0.2405930124732438],
        [0.2763819095477387, 0.2500523767608359],
        [0.2864321608040201, 0.2595567050234224],
        [0.2964824120603016, 0.2691081607249792],
        [0.3065326633165830, 0.2787089741743819],
        [0.3165829145728642, 0.2883614469491968],
        [0.3266331658291457, 0.2980679566134342],
        [0.3366834170854272, 0.3078309617562982],
        [0.3467336683417086, 0.3176530073817500],
        [0.3567839195979901, 0.3275367306818140],
        [0.3668341708542713, 0.3374848672300731],
        [0.3768844221105527, 0.3475002576357475],
        [0.3869346733668342, 0.3575858547032160],
        [0.3969849246231156, 0.3677447311468908],
        [0.4070351758793971, 0.3779800879170656],
        [0.4170854271356783, 0.3882952631988530],
        [0.4271356783919598, 0.3986937421537033],
        [0.4371859296482412, 0.4091791674814065],
        [0.4472361809045227, 0.4197553508900892],
        [0.4572864321608041, 0.4304262855727095],
        [0.4673366834170853, 0.4411961598011673],
        [0.4773869346733668, 0.4520693717636631],
        [0.4874371859296482, 0.4630505457876562],
        [0.4974874371859297, 0.4741445501101276],
        [0.5075376884422111, 0.4853565163792548],
        [0.5175879396984926, 0.4966918610976727],
        [0.5276381909547738, 0.5081563092478776],
        [0.5376884422110553, 0.5197559203758475],
        [0.5477386934673367, 0.5314971174506351],
        [0.5577889447236182, 0.5433867188667488],
        [0.5678391959798996, 0.5554319740140607],
        [0.5778894472361809, 0.5676406029086670],
        [0.5879396984924623, 0.5800208404598278],
        [0.5979899497487438, 0.5925814860457237],
        [0.6080402010050252, 0.6053319591878225],
        [0.6180904522613067, 0.6182823622546834],
        [0.6281407035175879, 0.6314435512966627],
        [0.6381909547738693, 0.6448272163204705],
        [0.6482412060301508, 0.6584459725660506],
        [0.6582914572864322, 0.6723134646596918],
        [0.6683417085427137, 0.6864444859019416],
        [0.6783919597989949, 0.7008551154268512],
        [0.6884422110552764, 0.7155628765665775],
        [0.6984924623115578, 0.7305869205072695],
        [0.7085427135678393, 0.7459482402749372],
        [0.7185929648241207, 0.7616699213062539],
        [0.7286432160804019, 0.7777774364241168],
        [0.7386934673366834, 0.7942989950681580],
        [0.7487437185929648, 0.8112659592884406],
        [0.7587939698492463, 0.8287133425240066],
        [0.7688442211055277, 0.8466804118801808],
        [0.7788944723618090, 0.8652114209552718],
        [0.7889447236180904, 0.8843565089284371],
        [0.7989949748743719, 0.9041728136139368],
        [0.8090452261306533, 0.9247258630322434],
        [0.8190954773869348, 0.9460913340775435],
        [0.8291457286432160, 0.9683573017251450],
        [0.8391959798994975, 0.9916271537626481],
        [0.8492462311557789, 1.0160234238185164],
        [0.8592964824120604, 1.0416929156131458],
        [0.8693467336683418, 1.0688136818078477],
        [0.8793969849246230, 1.0976047316671316],
        [0.8894472361809045, 1.1283398662673620],
        [0.8994974874371859, 1.1613679596394628],
        [0.9095477386934674, 1.1971436902084893],
        [0.9195979899497488, 1.2362759846251965],
        [0.9296482412060301, 1.2796081406581803],
        [0.9396984924623115, 1.3283585022347517],
        [0.9497487437185930, 1.3843870842981043],
        [0.9597989949748744, 1.4507551442078186],
        [0.9698492462311559, 1.5330812342079663],
        [0.9798994974874373, 1.6436460578945915],
        [0.9899497487437185, 1.8201604213643334]
      ].forEach(d => {
        assert(Math.abs((erfinv(d[0]) - d[1]) / d[1]) < PRECISION)
      })
    })
  })

  describe('.logGamma()', () => {
    it('should return reference values', () => {
      [
        [-9.8994974874371859, -12.5542945019068775],
        [-9.7989949748743719, -12.9618412297169421],
        [-9.6984924623115578, -13.0464676361762990],
        [-9.5979899497487438, -12.9738924219572134],
        [-9.4974874371859297, -12.7900780606165512],
        [-9.3969849246231156, -12.5058743260894563],
        [-9.2964824120603016, -12.1092194784074803],
        [-9.1959798994974875, -11.5513915297405969],
        [-9.0954773869346734, -10.6533905019724138],
        [-8.9949748743718594, -7.4971671057362004],
        [-8.8944723618090453, -10.2976250030761118],
        [-8.7939698492462313, -10.6895874115309244],
        [-8.6934673366834172, -10.7745134558295810],
        [-8.5929648241206031, -10.7061245660602626],
        [-8.4924623115577891, -10.5277604200726973],
        [-8.3919597989949750, -10.2490662975338065],
        [-8.2914572864321610, -9.8567221120490061],
        [-8.1909547738693469, -9.2990597269594417],
        [-8.0904522613065328, -8.3822801016104691],
        [-7.9899497487437188, -5.9827710547309954],
        [-7.8894472361809047, -8.1462222340635293],
        [-7.7889447236180906, -8.5254358944130093],
        [-7.6884422110552766, -8.6121689467295699],
        [-7.5879396984924625, -8.5492825534834491],
        [-7.4874371859296485, -8.3776363996855654],
        [-7.3869346733668344, -8.1056945795589499],
        [-7.2864321608040203, -7.7188477964360764],
        [-7.1859296482412063, -7.1622982876389454],
        [-7.0854271356783922, -6.2257109869989034],
        [-6.9849246231155782, -4.2997235418398123],
        [-6.8844221105527641, -6.1132101718472835],
        [-6.7839195979899500, -6.4826356684231392],
        [-6.6834170854271360, -6.5729730340515076],
        [-6.5829145728643219, -6.5172205759912254],
        [-6.4824120603015079, -6.3538896867029084],
        [-6.3819095477386938, -6.0902842531397834],
        [-6.2814070351758797, -5.7104720308883516],
        [-6.1809045226130657, -5.1563254503584348],
        [-6.0804020100502516, -4.1989486480350982],
        [-5.9798994974874367, -2.6339632011114396],
        [-5.8793969849246226, -4.2152191355504627],
        [-5.7788944723618085, -4.5780979469011669],
        [-5.6783919597989945, -4.6742670998524281],
        [-5.5778894472361804, -4.6277413762373056],
        [-5.4773869346733663, -4.4748059810176661],
        [-5.3768844221105523, -4.2216238441035339],
        [-5.2763819095477382, -3.8509035094698354],
        [-5.1758793969849242, -3.3009693656375410],
        [-5.0753768844221101, -2.3219882256009603],
        [-4.9748743718592960, -1.0597762155960986],
        [-4.8743718592964820, -2.4740709702219386],
        [-4.7738693467336679, -2.8341684183943872],
        [-4.6733668341708539, -2.9390644916725885],
        [-4.5728643216080398, -2.9045699722046798],
        [-4.4723618090452257, -2.7648583658164445],
        [-4.3718592964824117, -2.5249704019718688],
        [-4.2713567839195976, -2.1662176602869003],
        [-4.1708542713567835, -1.6231393654665058],
        [-4.0703517587939695, -0.6221545720553243],
        [-3.9698492462311554, 0.3702970900100908],
        [-3.8693467336683414, -0.9197348949449512],
        [-3.7688442211055273, -1.2817659531160310],
        [-3.6683417085427132, -1.3993902126824749],
        [-3.5678391959798992, -1.3809109618662427],
        [-3.4673366834170851, -1.2585004266608029],
        [-3.3668341708542711, -1.0360984917059894],
        [-3.2663316582914570, -0.6935836459893354],
        [-3.1658291457286429, -0.1614551597902552],
        [-3.0653266331658289, 0.8609658799717819],
        [-2.9648241206030148, 1.6016802494440738],
        [-2.8643216080402008, 0.4039566610715979],
        [-2.7638190954773867, 0.0334729539860940],
        [-2.6633165829145726, -0.1028984500075405],
        [-2.5628140703517586, -0.1065862910271167],
        [-2.4623115577889445, -0.0078771314104120],
        [-2.3618090452261304, 0.1903562820815587],
        [-2.2613065326633164, 0.5096922716549165],
        [-2.1608040201005023, 1.0239342381621193],
        [-2.0603015075376883, 2.0648818307744112],
        [-1.9597989949748733, 2.5601519747768600],
        [-1.8592964824120592, 1.4265895522932448],
        [-1.7587939698492452, 1.0372753033200754],
        [-1.6582914572864311, 0.8718576544735901],
        [-1.5577889447236171, 0.8351724534578564],
        [-1.4572864321608030, 0.8986613732032164],
        [-1.3567839195979889, 1.0604301956621054],
        [-1.2562814070351749, 1.3434751510836034],
        [-1.1557788944723608, 1.8261158863456783],
        [-1.0552763819095468, 2.8760965820670639],
        [-0.9547738693467327, 3.1179020738173553],
        [-0.8542713567839186, 2.0157349254571226],
        [-0.7537688442211046, 1.5867479731684249],
        [-0.6532663316582905, 1.3701056762872210],
        [-0.5527638190954764, 1.2761073385364079],
        [-0.4522613065326624, 1.2774623117196584],
        [-0.3517587939698483, 1.3727768763239057],
        [-0.2512562814070343, 1.5859289251677182],
        [-0.1507537688442202, 1.9993478315036475],
        [-0.0502512562814061, 3.0218550677939797],
        [0.0502512562814079, 2.9637416209100094],
        [0.1507537688442220, 1.8225345361142704],
        [0.2512562814070360, 1.2827251816292802],
        [0.3517587939698501, 0.9293699745085368],
        [0.4522613065326642, 0.6720514727199403],
        [0.5527638190954782, 0.4752489784332278],
        [0.6532663316582923, 0.3210931508667377],
        [0.7537688442211063, 0.1992065164504010],
        [0.8542713567839204, 0.1029610199470829],
        [0.9547738693467345, 0.0278257459850000],
        [1.0552763819095485, -0.0294586136758619],
        [1.1557788944723626, -0.0713314102799414],
        [1.2562814070351767, -0.0996769983571227],
        [1.3567839195979907, -0.1159890451148402],
        [1.4572864321608048, -0.1214771410487362],
        [1.5577889447236188, -0.1171386270489169],
        [1.6582914572864329, -0.1038085511395331],
        [1.7587939698492470, -0.0821953737236777],
        [1.8592964824120610, -0.0529070960849986],
        [1.9597989949748751, -0.0164707790989042],
        [2.0603015075376891, 0.0266526084104811],
        [2.1608040201005032, 0.0760567105343359],
        [2.2613065326633173, 0.1313807811010532],
        [2.3618090452261313, 0.1923025304447694],
        [2.4623115577889454, 0.2585323752044944],
        [2.5628140703517595, 0.3298087667120323],
        [2.6633165829145735, 0.4058943588314538],
        [2.7638190954773876, 0.4865728365285855],
        [2.8643216080402016, 0.5716462698952560],
        [2.9648241206030157, 0.6609328900365444],
        [3.0653266331658298, 0.7542652066343061],
        [3.1658291457286438, 0.8514884044968508],
        [3.2663316582914579, 0.9524589696293212],
        [3.3668341708542719, 1.0570435054579845],
        [3.4673366834170860, 1.1651177076271135],
        [3.5678391959799001, 1.2765654718429098],
        [3.6683417085427141, 1.3912781139887183],
        [3.7688442211055282, 1.5091536854904015],
        [3.8693467336683423, 1.6300963699005877],
        [3.9698492462311563, 1.7540159490678016],
        [4.0703517587939704, 1.8808273291912361],
        [4.1708542713567844, 2.0104501186329835],
        [4.2713567839195985, 2.1428082506427200],
        [4.3718592964824126, 2.2778296452036453],
        [4.4723618090452266, 2.4154459050784651],
        [4.5728643216080407, 2.5555920418559901],
        [4.6733668341708547, 2.6982062284005690],
        [4.7738693467336688, 2.8432295746103620],
        [4.8743718592964829, 2.9906059238140692],
        [4.9748743718592969, 3.1402816674934089],
        [5.0753768844221110, 3.2922055763218316],
        [5.1758793969849251, 3.4463286457678564],
        [5.2763819095477391, 3.6026039547316886],
        [5.3768844221105532, 3.7609865358724135],
        [5.4773869346733672, 3.9214332564452690],
        [5.5778894472361813, 4.0839027086083028],
        [5.6783919597989954, 4.2483551082786786],
        [5.7788944723618094, 4.4147522017237550],
        [5.8793969849246235, 4.5830571791633119],
        [5.9798994974874375, 4.7532345947388297],
        [6.0804020100502534, 4.9252502922753205],
        [6.1809045226130657, 5.0990713363221154],
        [6.2814070351758815, 5.2746659480127018],
        [6.3819095477386938, 5.4520034453306616],
        [6.4824120603015096, 5.6310541874107134],
        [6.5829145728643219, 5.8117895225402840],
        [6.6834170854271377, 5.9941817395601493],
        [6.7839195979899500, 6.1782040223911494],
        [6.8844221105527659, 6.3638304074403198],
        [6.9849246231155782, 6.5510357436622684],
        [7.0854271356783940, 6.7397956550726388],
        [7.1859296482412063, 6.9300865055284291],
        [7.2864321608040221, 7.1218853656068610],
        [7.3869346733668344, 7.3151699814288538],
        [7.4874371859296502, 7.5099187452868605],
        [7.5879396984924625, 7.7061106679483853],
        [7.6884422110552784, 7.9037253525177888],
        [7.7889447236180906, 8.1027429697482027],
        [7.8894472361809065, 8.3031442347047637],
        [7.9899497487437188, 8.5049103846878555],
        [8.0904522613065346, 8.7080231583327858],
        [8.1909547738693469, 8.9124647758084503],
        [8.2914572864321627, 9.1182179200439819],
        [8.3919597989949750, 9.3252657189174517],
        [8.4924623115577909, 9.5335917283459786],
        [8.5929648241206031, 9.7431799162208677],
        [8.6934673366834190, 9.9540146471358835],
        [8.7939698492462313, 10.1660806678601414],
        [8.8944723618090471, 10.3793630935110688],
        [8.9949748743718594, 10.5938473943856053],
        [9.0954773869346752, 10.8095193834111285],
        [9.1959798994974875, 11.0263652041799851],
        [9.2964824120603033, 11.2443713195342774],
        [9.3969849246231156, 11.4635245006694557],
        [9.4974874371859315, 11.6838118167278697],
        [9.5979899497487438, 11.9052206248547758],
        [9.6984924623115596, 12.1277385606917054],
        [9.7989949748743719, 12.3513535292831644],
        [9.8994974874371877, 12.5760536963747320],
        [10.0000000000000000, 12.8018274800814691]
      ].forEach(d => {
        console.log(d[0], d[1], logGamma(d[0]), Math.abs((logGamma(d[0]) - d[1]) / d[1]))
        // assert(Math.abs((logGamma(d[0]) - d[1]) / d[1]) < PRECISION)
      })
    })
  })

  describe('.lambertW()', () => {
    it('should return reference values', () => {
      [
        [-0.3678794411700000, -0.9999971997877233],
        [-0.3157795444807035, -0.5441134537771138],
        [-0.2636796477914070, -0.3890990643447889],
        [-0.2115797511021105, -0.2799270568696046],
        [-0.1594798544128140, -0.1935336165151225],
        [-0.1073799577235175, -0.1212181343282968],
        [-0.0552800610342211, -0.0586172818612146],
        [-0.0031801643449246, -0.0031903263082691],
        [0.0489197323443719, 0.0466882527874314],
        [0.1010196290336684, 0.0921286689820297],
        [0.1531195257229649, 0.1339266403457472],
        [0.2052194224122614, 0.1726740495073714],
        [0.2573193191015579, 0.2088243469666495],
        [0.3094192157908544, 0.2427333845921879],
        [0.3615191124801508, 0.2746860609885916],
        [0.4136190091694473, 0.3049143534849716],
        [0.4657189058587438, 0.3336098998770645],
        [0.5178188025480404, 0.3609330088828490],
        [0.5699186992373368, 0.3870192595829393],
        [0.6220185959266333, 0.4119844305564614],
        [0.6741184926159298, 0.4359282454285595],
        [0.7262183893052263, 0.4589372628438796],
        [0.7783182859945228, 0.4810871369271975],
        [0.8304181826838193, 0.5024444071639654],
        [0.8825180793731158, 0.5230679314532509],
        [0.9346179760624123, 0.5430100450714285],
        [0.9867178727517087, 0.5623175066124954],
        [1.0388177694410052, 0.5810322765791915],
        [1.0909176661303017, 0.5991921632054439],
        [1.1430175628195982, 0.6168313619859700],
        [1.1951174595088947, 0.6339809093937462],
        [1.2472173561981912, 0.6506690667802083],
        [1.2993172528874877, 0.6669216470606881],
        [1.3514171495767842, 0.6827622941967169],
        [1.4035170462660806, 0.6982127234898542],
        [1.4556169429553771, 0.7132929291492084],
        [1.5077168396446736, 0.7280213643781835],
        [1.5598167363339701, 0.7424150982653516],
        [1.6119166330232666, 0.7564899530004653],
        [1.6640165297125633, 0.7702606243251484],
        [1.7161164264018596, 0.7837407876352481],
        [1.7682163230911558, 0.7969431917527050],
        [1.8203162197804525, 0.8098797420595689],
        [1.8724161164697493, 0.8225615744203586],
        [1.9245160131590455, 0.8349991210996038],
        [1.9766159098483418, 0.8472021696999292],
        [2.0287158065376385, 0.8591799159952211],
        [2.0808157032269352, 0.8709410114075293],
        [2.1329155999162315, 0.8824936057708478],
        [2.1850154966055277, 0.8938453859361253],
        [2.2371153932948245, 0.9050036106968677],
        [2.2892152899841212, 0.9159751424511220],
        [2.3413151866734174, 0.9267664759615458],
        [2.3934150833627137, 0.9373837645291205],
        [2.4455149800520104, 0.9478328438565348],
        [2.4976148767413071, 0.9581192538433361],
        [2.5497147734306034, 0.9682482585257076],
        [2.6018146701198996, 0.9782248643484719],
        [2.6539145668091964, 0.9880538369350594],
        [2.7060144634984931, 0.9977397165021712],
        [2.7581143601877893, 1.0072868320493416],
        [2.8102142568770856, 1.0166993144391625],
        [2.8623141535663823, 1.0259811084713100],
        [2.9144140502556790, 1.0351359840424421],
        [2.9665139469449753, 1.0441675464743094],
        [3.0186138436342715, 1.0530792460838507],
        [3.0707137403235683, 1.0618743870614920],
        [3.1228136370128650, 1.0705561357171778],
        [3.1749135337021612, 1.0791275281477495],
        [3.2270134303914575, 1.0875914773740247],
        [3.2791133270807542, 1.0959507799912656],
        [3.3312132237700509, 1.1042081223725562],
        [3.3833131204593472, 1.1123660864609053],
        [3.4354130171486434, 1.1204271551825624],
        [3.4875129138379402, 1.1283937175110745],
        [3.5396128105272369, 1.1362680732089412],
        [3.5917127072165331, 1.1440524372713414],
        [3.6438126039058294, 1.1517489440942503],
        [3.6959125005951265, 1.1593596513873305],
        [3.7480123972844228, 1.1668865438502380],
        [3.8001122939737191, 1.1743315366294078],
        [3.8522121906630153, 1.1816964785709516],
        [3.9043120873523116, 1.1889831552840207],
        [3.9564119840416088, 1.1961932920278102],
        [4.0085118807309046, 1.2033285564343199],
        [4.0606117774202009, 1.2103905610780259],
        [4.1127116741094980, 1.2173808659027372],
        [4.1648115707987943, 1.2243009805151104],
        [4.2169114674880905, 1.2311523663535748],
        [4.2690113641773868, 1.2379364387407434],
        [4.3211112608666831, 1.2446545688267865],
        [4.3732111575559802, 1.2513080854306882],
        [4.4253110542452765, 1.2578982767857909],
        [4.4774109509345728, 1.2644263921955738],
        [4.5295108476238699, 1.2708936436051783],
        [4.5816107443131662, 1.2773012070938021],
        [4.6337106410024624, 1.2836502242927255],
        [4.6858105376917587, 1.2899418037333930],
        [4.7379104343810550, 1.2961770221296782],
        [4.7900103310703521, 1.3023569255981702],
        [4.8421102277596484, 1.3084825308200583],
        [4.8942101244489447, 1.3145548261479654],
        [4.9463100211382418, 1.3205747726608361],
        [4.9984099178275381, 1.3265433051698041],
        [5.0505098145168343, 1.3324613331777562],
        [5.1026097112061306, 1.3383297417951441],
        [5.1547096078954269, 1.3441493926144283],
        [5.2068095045847240, 1.3499211245453893],
        [5.2589094012740203, 1.3556457546133995],
        [5.3110092979633166, 1.3613240787226220],
        [5.3631091946526137, 1.3669568723859749],
        [5.4152090913419100, 1.3725448914235994],
        [5.4673089880312062, 1.3780888726314486],
        [5.5194088847205025, 1.3835895344215348],
        [5.5715087814097988, 1.3890475774352644],
        [5.6236086780990959, 1.3944636851312207],
        [5.6757085747883922, 1.3998385243486628],
        [5.7278084714776885, 1.4051727458479462],
        [5.7799083681669856, 1.4104669848289897],
        [5.8320082648562819, 1.4157218614288636],
        [5.8841081615455781, 1.4209379811994975],
        [5.9362080582348744, 1.4261159355664650],
        [5.9883079549241707, 1.4312563022697380],
        [6.0404078516134678, 1.4363596457872592],
        [6.0925077483027641, 1.4414265177421386],
        [6.1446076449920604, 1.4464574572942250],
        [6.1967075416813575, 1.4514529915167778],
        [6.2488074383706538, 1.4564136357589097],
        [6.3009073350599500, 1.4613398939944526],
        [6.3530072317492463, 1.4662322591578476],
        [6.4051071284385426, 1.4710912134676422],
        [6.4572070251278397, 1.4759172287381392],
        [6.5093069218171360, 1.4807107666797195],
        [6.5614068185064323, 1.4854722791883288],
        [6.6135067151957294, 1.4902022086245992],
        [6.6656066118850257, 1.4949009880830477],
        [6.7177065085743219, 1.4995690416517755],
        [6.7698064052636182, 1.5042067846630693],
        [6.8219063019529145, 1.5088146239352869],
        [6.8740061986422116, 1.5133929580063878],
        [6.9261060953315079, 1.5179421773594581],
        [6.9782059920208042, 1.5224626646405546],
        [7.0303058887101013, 1.5269547948691851],
        [7.0824057853993976, 1.5314189356417198],
        [7.1345056820886938, 1.5358554473280213],
        [7.1866055787779901, 1.5402646832615601],
        [7.2387054754672864, 1.5446469899232793],
        [7.2908053721565835, 1.5490027071194497],
        [7.3429052688458798, 1.5533321681537535],
        [7.3950051655351761, 1.5576356999938212],
        [7.4471050622244732, 1.5619136234324338],
        [7.4992049589137695, 1.5661662532435969],
        [7.5513048556030657, 1.5703938983336818],
        [7.6034047522923620, 1.5745968618878197],
        [7.6555046489816583, 1.5787754415117286],
        [7.7076045456709554, 1.5829299293691432],
        [7.7597044423602526, 1.5870606123150104],
        [7.8118043390495480, 1.5911677720246085],
        [7.8639042357388451, 1.5952516851187388],
        [7.9160041324281405, 1.5993126232851311],
        [7.9681040291174376, 1.6033508533962044],
        [8.0202039258067348, 1.6073666376233080],
        [8.0723038224960302, 1.6113602335475754],
        [8.1244037191853273, 1.6153318942675079],
        [8.1765036158746227, 1.6192818685034023],
        [8.2286035125639199, 1.6232104006987387],
        [8.2807034092532170, 1.6271177311186269],
        [8.3328033059425124, 1.6310040959454224],
        [8.3849032026318095, 1.6348697273716029],
        [8.4370030993211067, 1.6387148536900007],
        [8.4891029960104021, 1.6425396993814858],
        [8.5412028926996992, 1.6463444852001785],
        [8.5933027893889964, 1.6501294282562806],
        [8.6454026860782918, 1.6538947420966046],
        [8.6975025827675889, 1.6576406367828735],
        [8.7496024794568843, 1.6613673189678713],
        [8.8017023761461815, 1.6650749919695076],
        [8.8538022728354786, 1.6687638558428728],
        [8.9059021695247740, 1.6724341074503430],
        [8.9580020662140711, 1.6760859405298014],
        [9.0101019629033665, 1.6797195457610337],
        [9.0622018595926637, 1.6833351108303605],
        [9.1143017562819608, 1.6869328204935599],
        [9.1664016529712562, 1.6905128566371328],
        [9.2185015496605534, 1.6940753983379695],
        [9.2706014463498505, 1.6976206219214591],
        [9.3227013430391459, 1.7011487010180988],
        [9.3748012397284430, 1.7046598066186436],
        [9.4269011364177402, 1.7081541071278445],
        [9.4790010331070356, 1.7116317684168170],
        [9.5311009297963327, 1.7150929538740827],
        [9.5832008264856281, 1.7185378244553247],
        [9.6353007231749253, 1.7219665387318941],
        [9.6874006198642224, 1.7253792529381067],
        [9.7395005165535178, 1.7287761210173647],
        [9.7916004132428149, 1.7321572946671415],
        [9.8437003099321103, 1.7355229233828571],
        [9.8958002066214075, 1.7388731545006846],
        [9.9479001033107046, 1.7422081332393131],
        [10.0000000000000000, 1.7455280027406994]
      ].forEach(d => {
        // console.log(d[0], lambertW(d[0]), d[1], Math.abs((lambertW(d[0]) - d[1]) / d[1]))
        assert(Math.abs((lambertW(d[0]) - d[1]) / d[1]) < PRECISION)
      })
    })
  })
  return*/

  describe('.hurwitzZeta(), .riemannZeta()', () => {
    it('zeta(s) - zeta(s, n+1) should give H(s, n)', () => {
      utils.repeat(() => {
        let s = Math.random() * 10 + 1
        let sum = 0
        for (let n = 1; n < 100; n++) {
          sum += 1 / Math.pow(n, s)
          assert(Math.abs(sum - riemannZeta(s) + hurwitzZeta(s, n + 1)) / sum < 1e-6)
        }
      }, LAPS)
    })
  })

  describe('.gamma(), .logGamma()', () => {
    it('logGamma(x) should be equal to ln(gamma(x))', () => {
      for (let i = 0; i < LAPS; i++) {
        let x = Math.random() * 100

        let g = gamma(x)

        let lng = logGamma(x)
        assert(Math.abs(Math.log(g) - lng) / lng < 0.01)
      }
    })
  })

  describe('.gammaLowerIncomplete(), .gammaUpperIncomplete()', () => {
    it('should vanish below 0', () => {
      utils.repeat(() => {
        let s = 2 + Math.random() * 10

        let x = -10
        assert(gammaLowerIncomplete(s, x) === 0)
      }, LAPS)
    })
    it('should be equal to exp(-x) for s = 1', () => {
      utils.repeat(() => {
        let x = Math.random() * 100

        let gui = gammaUpperIncomplete(1, x) * gamma(1)
        assert(Math.abs(gui - Math.exp(-x)) / gui < 0.01)
      }, LAPS)
    })

    it('should be equal to sqrt(pi) * erf(sqrt(x)) for s = 1/2', () => {
      utils.repeat(() => {
        let x = Math.random() * 100

        let gli = gammaLowerIncomplete(0.5, x) * gamma(0.5)
        assert(Math.abs(gli - Math.sqrt(Math.PI) * erf(Math.sqrt(x))) / gli < 0.01)
      }, LAPS)
    })

    it('should converge to x^s / s as x -> 0', () => {
      for (let i = 0; i < LAPS; i++) {
        let s = Math.random()

        let x = 1e-5 * (1 + Math.random())

        let xs = Math.pow(x, s)

        let gli = gammaLowerIncomplete(s, x) * gamma(s)
        if (xs > 1e-100) {
          assert(Math.abs(gli / Math.pow(x, s) * s - 1) < 0.01)
        }
      }
    })

    it('should converge to gamma(s) as x -> inf', () => {
      for (let i = 0; i > LAPS; i++) {
        let s = Math.random() * 100

        let x = 1e5 + Math.random() * 1e5

        let gli = gammaLowerIncomplete(s, x)
        assert(Math.abs(gli - 1))
      }
    })
  })

  describe('.lambertW()', () => {
    it('should satisfy the W * exp(W) = x equation', () => {
      utils.repeat(() => {
        let x = Math.random() * 10
        let w = lambertW(x)
        assert(Math.abs(w * Math.exp(w) - x) / x < 0.01)
      })
    })
  })

  describe('.marcumQ()', () => {
    describe('series expansion', () => {
      describe('Q', () => {
        it('should satisfy the recurrence relation', () => {
          utils.repeat(() => {
            let x = Math.random() * 30
            let y = 40 + Math.random() * 60
            let mu = 2 + Math.random() * 5
            // console.log(x < 30, y >= x + mu)
            // return

            let q1 = marcumQ(mu + 1, x, y)
            let q2 = marcumQ(mu, x, y)
            let q3 = marcumQ(mu + 2, x, y)
            let q4 = marcumQ(mu - 1, x, y)

            if (x > mu) {
              assert(Math.abs(((x - mu) * q1 + (y + mu) * q2) / (x * q3 + y * q4) - 1) < PRECISION)
            } else {
              assert(Math.abs(((y + mu) * q2) / (x * q3 + (mu - x) * q1 + y * q4) - 1) < PRECISION)
            }
          }, LAPS)
        })
      })

      describe('P', () => {
        it('should satisfy the recurrence relation', () => {
          utils.repeat(() => {
            let x = Math.random() * 30
            let y = 10 + Math.random() * 10
            let mu = 30 + Math.random() * 5
            // console.log(x < 30, y < x + mu)
            // return

            let q1 = marcumQ(mu + 1, x, y)
            let q2 = marcumQ(mu, x, y)
            let q3 = marcumQ(mu + 2, x, y)
            let q4 = marcumQ(mu - 1, x, y)

            if (x > mu) {
              assert(Math.abs(((x - mu) * q1 + (y + mu) * q2) / (x * q3 + y * q4) - 1) < PRECISION)
            } else {
              assert(Math.abs(((y + mu) * q2) / (x * q3 + (mu - x) * q1 + y * q4) - 1) < PRECISION)
            }
          }, LAPS)
        })
      })
    })

    /*describe('asymptotic expansion for large xi', () => {
      describe('Q', () => {
        it('should satisfy the recurrence relation', () => {
          utils.repeat(() => {
            let x = 40 + Math.random() * 10
            let y = 60 + Math.random() * 10
            let mu = 2 + Math.random() * 5
            //let xi = 2 * Math.sqrt(x * y)
            //console.log(x >= 30, xi > 30, mu * mu < 2 * xi, y >= x + mu)
            //return

            let q1 = marcumQ(mu + 1, x, y)
            let q2 = marcumQ(mu, x, y)
            let q3 = marcumQ(mu + 2, x, y)
            let q4 = marcumQ(mu - 1, x, y)

            if (x > mu) {
              assert(Math.abs(((x - mu) * q1 + (y + mu) * q2) / (x * q3 + y * q4) - 1) < PRECISION)
            } else {
              assert(Math.abs(((y + mu) * q2) / (x * q3 + (mu - x) * q1 + y * q4) - 1) < PRECISION)
            }
          }, LAPS)
        })
      })

      describe('P', () => {
        it('should satisfy the recurrence relation', () => {
          utils.repeat(() => {
            let x = 40 + Math.random() * 10
            let y = 30 + Math.random() * 10
            let mu = 2 + Math.random() * 5
            //let xi = 2 * Math.sqrt(x * y)
            //console.log(x >= 30, xi > 30, mu * mu < 2 * xi, y < x + mu)
            //return

            let q1 = marcumQ(mu + 1, x, y)
            let q2 = marcumQ(mu, x, y)
            let q3 = marcumQ(mu + 2, x, y)
            let q4 = marcumQ(mu - 1, x, y)

            if (x > mu) {
              assert(Math.abs(((x - mu) * q1 + (y + mu) * q2) / (x * q3 + y * q4) - 1) < PRECISION)
            } else {
              assert(Math.abs(((y + mu) * q2) / (x * q3 + (mu - x) * q1 + y * q4) - 1) < PRECISION)
            }
          }, LAPS)
        })
      })
    })

    /*describe('recurrence relation', () => {
      describe('Q', () => {
        it('should satisfy the recurrence relation', () => {
          utils.repeat(() => {
            let x = 40 + Math.random() * 10
            let mu = 100 + Math.random() * 10
            let s = Math.sqrt(4 * x + 2 * mu) - 5
            let f1 = x + mu - s
            let f2 = x + mu + s
            let y = f1 + (f2 - f1) * (0.9 + 0.1 * Math.random())
            //let xi = 2 * Math.sqrt(x * y)
            //console.log(x >= 30, xi > 30, mu * mu > 2 * xi, f1 < y, y < f2, y > x + mu)
            //return

            let q1 = marcumQ(mu + 1, x, y)
            let q2 = marcumQ(mu, x, y)
            let q3 = marcumQ(mu + 2, x, y)
            let q4 = marcumQ(mu - 1, x, y)

            if (x > mu) {
              assert(Math.abs(((x - mu) * q1 + (y + mu) * q2) / (x * q3 + y * q4) - 1) < PRECISION)
            } else {
              assert(Math.abs(((y + mu) * q2) / (x * q3 + (mu - x) * q1 + y * q4) - 1) < PRECISION)
            }
          }, LAPS)
        })
      })

      describe('P', () => {
        it('should satisfy the recurrence relation', () => {
          utils.repeat(() => {
            let x = 40 + Math.random() * 10
            let mu = 100 + Math.random() * 10
            let s = Math.sqrt(4 * x + 2 * mu) - 5
            let f1 = x + mu - s
            let f2 = x + mu + s
            let y = f1 + 0.1 * (f2 - f1) * Math.random()
            //let xi = 2 * Math.sqrt(x * y)
            //console.log(x >= 30, xi > 30, mu * mu > 2 * xi, f1 < y, y < f2, mu < 135, y < x + mu)
            //return

            let q1 = marcumQ(mu + 1, x, y)
            let q2 = marcumQ(mu, x, y)
            let q3 = marcumQ(mu + 2, x, y)
            let q4 = marcumQ(mu - 1, x, y)

            if (x > mu) {
              assert(Math.abs(((x - mu) * q1 + (y + mu) * q2) / (x * q3 + y * q4) - 1) < PRECISION)
            } else {
              assert(Math.abs(((y + mu) * q2) / (x * q3 + (mu - x) * q1 + y * q4) - 1) < PRECISION)
            }
          }, LAPS)
        })
      })
    })*/
  })

  describe('.owenT()', () => {
    it('should return the reference values', () => {
      [
        {h: 0.0625, a: 0.25, t: 0.03891193023470137},
        {h: 6.5, a: 0.4375, t: 2.0005773048508314e-11},
        {h: 7, a: 0.96875, t: 6.399062719389869e-13},
        {h: 4.78125, a: 0.0625, t: 1.0632974804687463e-7},
        {h: 2, a: 0.5, t: 0.008625077985521507},
        {h: 1, a: 0.9999975, t: 0.0667418089782286},
        {h: 1, a: 0.5, t: 0.04306469112078537},
        {h: 1, a: 1, t: 0.06674188216570097},
        {h: 1, a: 2, t: 0.0784681869930841},
        {h: 1, a: 3, t: 0.0792995047488726},
        {h: 0.5, a: 0.5, t: 0.06448860284750375},
        {h: 0.5, a: 1, t: 0.1066710629614485},
        {h: 0.5, a: 2, t: 0.1415806036539784},
        {h: 0.5, a: 3, t: 0.1510840430760184},
        {h: 0.25, a: 0.5, t: 0.07134663382271778},
        {h: 0.25, a: 1, t: 0.1201285306350883},
        {h: 0.25, a: 2, t: 0.1666128410939293},
        {h: 0.25, a: 3, t: 0.1847501847929859},
        {h: 0.125, a: 0.5, t: 0.07317273327500386},
        {h: 0.125, a: 1, t: 0.1237630544953746},
        {h: 0.125, a: 2, t: 0.1737438887583106},
        {h: 0.125, a: 3, t: 0.1951190307092811},
        {h: 0.0078125, a: 0.5, t: 0.07378938035365545},
        {h: 0.0078125, a: 1, t: 0.1249951430754052},
        {h: 0.0078125, a: 2, t: 0.1761984774738108},
        {h: 0.0078125, a: 3, t: 0.1987772386442824},
        {h: 0.0078125, a: 10, t: 0.2340886964802671},
        {h: 0.0078125, a: 100, t: 0.2479460829231492}
        ].forEach(d => {
          assert(Math.abs(d.t - owenT(d.h, d.a)) < PRECISION)
      })
    })
  })
})
