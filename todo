# most important
- finish marcumQ implementation
- add unit tests to ran.mc


# dist
- Make use of compound distributions
- Check parameter domains
- Placeholder for Minimax
- Placeholder for scale-inverse chi2
- Placeholder for Nakagami-q (Hoyt)
- ARGUS                                 (rejection sampling)
- Benford                               (inverse transform)
- Benktander 1nd kind                   (lambertW)
- Delaporte                             (compound)
- Normal-exponential-gamma              (compound)
- Tukey                                 (pdf/cdf are not trivial)
- Hermite                               (requires higher order derivative)
- Planck                                (CDF unknown)
- von Mises                             (modified Bessel of k)
- Muth                                  (not-invertible cdf)
- Beta-binomial                         (generation unknown)
- Beta-pascal / Beta negative binomial  (generation unknown)
- Borel                                 (generation unknown)
- Davis                                 (generation unknown)
- Error / exponential power             (generation unknown)
- stable                                (generation unknown)
- trapezoidal
- alpha (scipy)
- anglit (scipy)
- crystal ball
- double gamma (scipy)
- double weibull (scipy)
- Exponentially modified Gaussian (EMG)
- generalized logistic (scipy)
- generalized normal
- generalized Pareto (scipy)
- generalized exponential (scipy)
- generalized extreme (scipy)
- Gauss hypergeometric (scipy)
- generalized half-logistic (scipy)
- Gilbrat (scipy)
- half logistic (scipy)
- half generalized normal (scipy)
- inverted Weibull (scipy)
- Mielke (scipy)
- Moyal (scipy)
- Non-central beta
- Non-central F
- Non-central t (scipy)
- Normal inverse Gauss (scipy)
- power-lognormal (scipy)
- R (scipy)
- skew normal (Owen's T)
- trapezoidal (scipy)
- truncated exponential (scipy)
- Dirichlet
- discrete Laplacian (scipy)
- Wishart
- inverse Wishart
- Champernowne
- ref: http://www.nrbook.com/devroye/Devroye_files/chapter_ten.pdf
- g-and-h distribution (https://books.google.dk/books?id=HMXYCgAAQBAJ&pg=PA29&dq=g-and-h+distribution&hl=en&sa=X&redir_esc=y#v=snippet&q=g-and-h%20distribution&f=false)


# statistical tests
- normality test
- anova (group variance)
- analysis of similarities (group variance)
- anderson-darling (distribution)
- bartlett (homoscedasticity)
- breusch-pagan (heteroscedasticity)
- brown-forsythe (group variance)
- cramer-von mises (distribution)
- mann-whitney (hypothesis test)
- wald (hypothesis test)
- welch (equal mean)
- wilcoxon (hypothesis test)
- shapiro-wilk (normality)


# ts
- Implement general Aggregator class


# process
- next()
- trend()
- noise()
- mean(power)
- correlation()
- Processes to add: https://en.wikipedia.org/wiki/Stochastic_process
- Brown
- Wiener
- Orstein-Uhlenbeck
- Gaussian
- Galton-Watson


# mc
- slice sampling
- hmc
- rejection sampling with log-concave dist
- slice sampling
- Gibbs sampling
- NUTS
- adaptive Metropolis
- Hamiltonian
- Adjust Euclidean metric from covariance in burn-in
- step size sampled randomly
